[
    {
        "agent_strategy": {},
        "badges": [],
        "brief": {
            "en_US": "Convert your Dify app's API to OpenAI compatible API",
            "ja_JP": "DifyアプリのAPIをOpenAI互換APIに変換する",
            "pt_BR": "Converta a API do seu aplicativo Dify para uma API compatível com OpenAI",
            "zh_Hans": "将您的Dify应用的API转换为OpenAI兼容API"
        },
        "category": "extension",
        "created_at": "2024-12-15T10:21:11Z",
        "endpoint": {
            "endpoints": [
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/chat/completions"
                }
            ],
            "settings": [
                {
                    "default": null,
                    "helper": null,
                    "label": {
                        "en_US": "API key",
                        "ja_JP": "API key",
                        "pt_BR": "API key",
                        "zh_Hans": "API key"
                    },
                    "name": "api_key",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please input your API key",
                        "ja_JP": "API keyを入力してください",
                        "pt_BR": "Please input your API key",
                        "zh_Hans": "请输入你的 API key"
                    },
                    "required": true,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": null,
                    "helper": null,
                    "label": {
                        "en_US": "App",
                        "ja_JP": "App",
                        "pt_BR": "App",
                        "zh_Hans": "App"
                    },
                    "name": "app_id",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please select an app",
                        "ja_JP": "アプリを選択してください",
                        "pt_BR": "Please select an app",
                        "zh_Hans": "请选择一个应用"
                    },
                    "required": true,
                    "scope": "chat",
                    "type": "app-selector",
                    "url": null
                },
                {
                    "default": null,
                    "helper": null,
                    "label": {
                        "en_US": "Memory Mode",
                        "ja_JP": "メモリーモード",
                        "pt_BR": "Modo de Memória",
                        "zh_Hans": "记忆模式"
                    },
                    "name": "memory_mode",
                    "options": [
                        {
                            "label": {
                                "en_US": "Last User Message",
                                "ja_JP": "最後のユーザーメッセージ",
                                "pt_BR": "Última Mensagem do Usuário",
                                "zh_Hans": "使用最后一条用户消息"
                            },
                            "value": "last_user_message"
                        }
                    ],
                    "placeholder": {
                        "en_US": "Please select a memory mode, it will decide how the Endpoint manage the context",
                        "ja_JP": "メモリーモードを選択してください, それは Endpoint がコンテキストをどのように管理するかを決定します",
                        "pt_BR": "Por favor, selecione um modo de memória, que decidirá como o Endpoint gerencia o contexto",
                        "zh_Hans": "请选择一个上下文模式，它将决定该 Endpoint 使用哪种方式管理上下文"
                    },
                    "required": true,
                    "scope": null,
                    "type": "select",
                    "url": null
                }
            ]
        },
        "icon": "langgenius/packages/oaicompat_dify_app/_assets/icon.svg",
        "index_id": "langgenius___oaicompat_dify_app",
        "install_count": 1798,
        "introduction": "### OpenAI Compatible\n\nThis extension converts your Dify app's API to OpenAI compatible API.\n\n- **Attention**: Only supports `last_user_message` memory mode for now and only `chat`, `agent` and `chatflow` apps are supported.\n- **History**: You can set a `messages` parameter to your app to get the complete history of a OpenAI compatible API.\n",
        "label": {
            "en_US": "OpenAI Compatible Dify App",
            "ja_JP": "OpenAI Compatible Dify App",
            "pt_BR": "OpenAI Compatible Dify App",
            "zh_Hans": "OpenAI Compatible Dify App"
        },
        "latest_package_identifier": "langgenius/oaicompat_dify_app:0.0.5@7a0c5ea03a7aacbe1d08c042e4b31b8a8ea82adb2df69ada39674f8712521be3",
        "latest_version": "0.0.5",
        "model": {},
        "name": "oaicompat_dify_app",
        "org": "langgenius",
        "plugin_id": "langgenius/oaicompat_dify_app",
        "plugins": {
            "agent_strategies": null,
            "endpoints": [
                "group/openai_compatible.yaml"
            ],
            "models": null,
            "tools": null
        },
        "privacy_options": "",
        "privacy_policy": "",
        "repository": "",
        "resource": {
            "memory": 1048576,
            "permission": {
                "app": {
                    "enabled": true
                },
                "endpoint": {
                    "enabled": true
                },
                "storage": {
                    "enabled": true,
                    "size": 1048576
                }
            }
        },
        "status": "active",
        "tags": [],
        "tool": {},
        "type": "plugin",
        "updated_at": "2025-03-03T12:21:14Z",
        "version_updated_at": "2025-03-03T12:21:14Z"
    },
    {
        "agent_strategy": {},
        "badges": [],
        "brief": {
            "en_US": "Convert your Dify Models into OpenAI compatible API",
            "ja_JP": "DifyモデルをOpenAI互換APIに変換",
            "pt_BR": "Converter seus modelos Dify em uma API compatível com OpenAI",
            "zh_Hans": "将您的Dify模型转换为OpenAI兼容API"
        },
        "category": "extension",
        "created_at": "2025-01-03T10:05:07Z",
        "endpoint": {
            "endpoints": [
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/v1/chat/completions"
                },
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/v1/embeddings"
                }
            ],
            "settings": [
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "API key",
                        "pt_BR": "API key",
                        "zh_Hans": "API key"
                    },
                    "name": "api_key",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please input your API key",
                        "pt_BR": "Please input your API key",
                        "zh_Hans": "请输入你的 API key"
                    },
                    "required": true,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "LLM",
                        "pt_BR": "LLM",
                        "zh_Hans": "LLM"
                    },
                    "name": "llm",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please select a LLM",
                        "pt_BR": "Please select a LLM",
                        "zh_Hans": "请选择一个 LLM"
                    },
                    "required": false,
                    "scope": "llm",
                    "type": "model-selector",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Text Embedding",
                        "pt_BR": "Text Embedding",
                        "zh_Hans": "文本嵌入"
                    },
                    "name": "text_embedding",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please select a Text Embedding Model",
                        "pt_BR": "Please select a Text Embedding Model",
                        "zh_Hans": "请选择一个文本嵌入模型"
                    },
                    "required": false,
                    "scope": "text-embedding",
                    "type": "model-selector",
                    "url": null
                }
            ]
        },
        "icon": "langgenius/packages/oaicompat_dify_model/_assets/icon.svg",
        "index_id": "langgenius___oaicompat_dify_model",
        "install_count": 1321,
        "introduction": "## oaicompat_dify_model\n\n**Author:** langgenius\n**Version:** 0.0.1\n**Type:** extension\n\n### Description\n\n\n\n",
        "label": {
            "en_US": "OpenAI Compatible Dify Models",
            "ja_JP": "OpenAI Compatible Dify Models",
            "pt_BR": "OpenAI Compatible Dify Models",
            "zh_Hans": "OpenAI Compatible Dify Models"
        },
        "latest_package_identifier": "langgenius/oaicompat_dify_model:0.0.5@986eea3a982822f2b51d5e47afbeeb58a0ab299f9648920045f9d888fd514dc5",
        "latest_version": "0.0.5",
        "model": {},
        "name": "oaicompat_dify_model",
        "org": "langgenius",
        "plugin_id": "langgenius/oaicompat_dify_model",
        "plugins": {
            "agent_strategies": null,
            "endpoints": [
                "group/oaicompat_dify_model.yaml"
            ],
            "models": null,
            "tools": null
        },
        "privacy_options": "",
        "privacy_policy": "PRIVACY.md",
        "repository": "",
        "resource": {
            "memory": 268435456,
            "permission": {
                "endpoint": {
                    "enabled": true
                },
                "model": {
                    "enabled": true,
                    "llm": true,
                    "moderation": true,
                    "rerank": false,
                    "speech2text": false,
                    "text_embedding": true,
                    "tts": false
                }
            }
        },
        "status": "active",
        "tags": [],
        "tool": {},
        "type": "plugin",
        "updated_at": "2025-03-14T01:47:45Z",
        "version_updated_at": "2025-03-14T01:47:45Z"
    },
    {
        "agent_strategy": {},
        "badges": [],
        "brief": {
            "en_US": "Trigger a dify app from webhook.",
            "pt_BR": "Acione um aplicativo dify a partir de um webhook.",
            "zh_Hans": "通过网络钩子触发dify应用程序。"
        },
        "category": "extension",
        "created_at": "2025-03-08T17:02:18Z",
        "endpoint": {
            "endpoints": [
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/workflow/<app_id>"
                },
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/chatflow/<app_id>"
                },
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/single-chatflow"
                },
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/single-workflow"
                }
            ],
            "settings": [
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "App (Disables the <app_id> routes)",
                        "pt_BR": "Aplicativo (Desativa as rotas de <app_id>)",
                        "zh_Hans": "应用程序 (禁用<app_id>路由)"
                    },
                    "name": "static_app_id",
                    "options": null,
                    "placeholder": {
                        "en_US": "Select a specific app to expose, instead of exposing all workspace apps",
                        "pt_BR": "Selecione um aplicativo específico para expor, em vez de expor todos os aplicativos do espaço de trabalho",
                        "zh_Hans": "选择要公开的特定应用，而不是公开所有工作区应用"
                    },
                    "required": false,
                    "scope": null,
                    "type": "app-selector",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "API key",
                        "pt_BR": "Chave de API",
                        "zh_Hans": "API 密钥"
                    },
                    "name": "api_key",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please input your API key",
                        "pt_BR": "Por favor, insira sua chave de API",
                        "zh_Hans": "请输入你的 API 密钥"
                    },
                    "required": false,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": "api_key_header",
                    "help": null,
                    "label": {
                        "en_US": "API key location",
                        "pt_BR": "Localização da chave de API",
                        "zh_Hans": "API 密钥位置"
                    },
                    "name": "api_key_location",
                    "options": [
                        {
                            "label": {
                                "en_US": "X-API-Key Header",
                                "pt_BR": "Cabeçalho X-API-Key",
                                "zh_Hans": "X-API-Key 头"
                            },
                            "value": "api_key_header"
                        },
                        {
                            "label": {
                                "en_US": "URL Query Param 'difyToken'",
                                "pt_BR": "Parâmetro de consulta URL 'difyToken'",
                                "zh_Hans": "URL 查询参数 'difyToken'"
                            },
                            "value": "token_query_param"
                        },
                        {
                            "label": {
                                "en_US": "None",
                                "pt_BR": "Nenhum",
                                "zh_Hans": "无"
                            },
                            "value": "none"
                        }
                    ],
                    "placeholder": {
                        "en_US": "Please select the API key location",
                        "pt_BR": "Por favor, selecione a localização da chave de API",
                        "zh_Hans": "请选择 API 密钥位置"
                    },
                    "required": true,
                    "scope": null,
                    "type": "select",
                    "url": null
                },
                {
                    "default": "none",
                    "help": null,
                    "label": {
                        "en_US": "Custom Middleware",
                        "pt_BR": "Middleware Personalizado",
                        "zh_Hans": "自定义中间件"
                    },
                    "name": "middleware",
                    "options": [
                        {
                            "label": {
                                "en_US": "Discord",
                                "pt_BR": "Discord",
                                "zh_Hans": "Discord"
                            },
                            "value": "discord"
                        },
                        {
                            "label": {
                                "en_US": "None",
                                "pt_BR": "Nenhum",
                                "zh_Hans": "无"
                            },
                            "value": "none"
                        }
                    ],
                    "placeholder": {
                        "en_US": "Custom middlewares can add logic like signature validation",
                        "pt_BR": "Middlewares personalizados podem adicionar lógica como validação de assinatura",
                        "zh_Hans": "自定义中间件可以添加诸如签名验证的逻辑"
                    },
                    "required": true,
                    "scope": null,
                    "type": "select",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Signature Verification Public Key",
                        "pt_BR": "Chave Pública de Verificação de Assinatura",
                        "zh_Hans": "签名验证公钥"
                    },
                    "name": "signature_verification_key",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please input your public key for signature verification",
                        "pt_BR": "Por favor, insira sua chave pública para verificação de assinatura",
                        "zh_Hans": "请输入您的签名验证公钥"
                    },
                    "required": false,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": true,
                    "help": null,
                    "label": {
                        "en_US": "Use req.body.inputs instead of req.body as the inputs object",
                        "pt_BR": "Usar req.body.inputs em vez de req.body como objeto de entradas",
                        "zh_Hans": "使用 req.body.inputs 代替 req.body 作为输入对象"
                    },
                    "name": "explicit_inputs",
                    "options": null,
                    "placeholder": null,
                    "required": false,
                    "scope": null,
                    "type": "boolean",
                    "url": null
                },
                {
                    "default": false,
                    "help": null,
                    "label": {
                        "en_US": "Transform req.body to req.body.json_string as JSON string.",
                        "pt_BR": "Transforme req.body em req.body.json_string como string JSON.",
                        "zh_Hans": "将req.body转换为req.body.json_string作为JSON字符串。"
                    },
                    "name": "json_string_input",
                    "options": null,
                    "placeholder": null,
                    "required": false,
                    "scope": null,
                    "type": "boolean",
                    "url": null
                },
                {
                    "default": false,
                    "help": null,
                    "label": {
                        "en_US": "Send res.body.data instead of res.body.data as workflow response.",
                        "pt_BR": "Envie res.body.data como resposta de fluxo de trabalho em vez de res.body.data.",
                        "zh_Hans": "当您希望接收 res.body.data 作为工作流响应时，将此项设置为 true。"
                    },
                    "name": "raw_data_output",
                    "options": null,
                    "placeholder": null,
                    "required": false,
                    "scope": null,
                    "type": "boolean",
                    "url": null
                }
            ]
        },
        "icon": "perzeuss/packages/webhook/_assets/icon.svg",
        "index_id": "perzeuss___webhook",
        "install_count": 1290,
        "introduction": "## Dify Plugin: Webhook \n\n<div align=\"center\">\n  <img src=\"https://img.shields.io/badge/Plugin%20Type-Extensionl-blue\" alt=\"Plugin Type: Extension\">\n  <img src=\"https://img.shields.io/github/v/release/perzeuss/dify-plugin-webhook?label=Version&color=DD7200\" alt=\"Latest Release Version\">\n  <br>\n  <img src=\"https://img.shields.io/badge/Compatible%20With-Dify%201.0-purple\" alt=\"Compatible With: Dify 1.0.*\">\n  <a href=\"https://codecov.io/gh/perzeuss/dify-plugin-webhook\">\n    <img src=\"https://codecov.io/gh/perzeuss/dify-plugin-webhook/main/graph/badge.svg\" alt=\"Coverage Status\">\n  </a>\n  <img src=\"https://img.shields.io/github/license/perzeuss/dify-plugin-webhook?label=License&color=darkgreen\" alt=\"License\">\n</div>\n\n### 🔍 Description\n\nThis project is a Dify Plugin that enables seamless triggering of Dify applications using webhooks. With this plugin, you can effortlessly initiate both chatflows and workflows through HTTP requests from any third-party system. 🚀\n\n### ✨ Key Features & Benefits\n\n| Feature | Webhook Plugin | Standard Dify API | Benefit |\n|---------|----------------|-------------------|---------|\n| **Flexible API Key Location** | Supports header, URL param, or none | Only Authorization header | Compatible with more third-party systems |\n| **Custom Endpoints** | Create multiple endpoints with different configs | Limited to standard endpoints | Support different third-party integrations simultaneously |\n| **Request Body Handling** | Full body or inputs object only | Fixed schema required | Works with systems that can't match Dify's schema |\n| **Raw Data Output** | Optional removal of Dify metadata | Always includes metadata | Clean responses for third-party integrations |\n| **Middleware Support** | Extensible with custom middleware | Not available | Add custom validation, or transformations |\n| **Discord Integration** | Built-in Discord webhook support | Requires custom implementation | Effortless Discord bot creation |\n| **Authentication Options** | Three authentication methods | Fixed authorization | Flexible security model |\n\n## 🚀 Getting Started\n\n### 📦 Installation\nVisit the Dify Plugin marketplace, search for the \"Webhook\" plugin and click the install button. After installation, click on the \"Webhook\" plugin on the plugins page.\n\n1. **Create Endpoint**:  \n   In the Endpoints section, click the \"+\" icon to create a unique webhook domain. You can choose any name you want. Each endpoint can have its own configuration, such as individualized credentials and request handling.\n\n2. **Configure API Key**:  \n   After installing the plugin, ensure you have set up an API key in your settings, unless using the `none` option for the API key location. For other configurations, this key is necessary for authenticating requests.\n\n3. **Configure API Key Location**:  \n   The API key can be utilized in various ways for compatibility with 3rd party systems:\n   - `X-API-Key` header\n   - URL query parameter `difyToken`\n   - `none` (no API key required)\n\n4. **Middleware Support**:  \n   The plugin supports the use of custom middlewares for request validation, transformations, and more. Built-in support for Discord webhooks is included, and you can add more middleware for other integrations. Please open a GitHub issue before working on custom middlewares - at the moment there is no dedicated middleware api and you might need to modify the main plugin code to support additional middleware features.\n\n5. **Specify Input Handling**:  \n   You have the option to specify whether to use `req.body.inputs` or the entire `req.body` for input variables. This flexibility enhances integration with third-party systems that don't support defining the request payload structure required by Dify.\n\n6. **JSON String Input**:  \n   Enable this option to automatically convert the entire request body to a JSON string. This is particularly useful when you want to pass a complex payload through a single input variable in Dify and parse it within your application logic.\n\n7. **Specify Output Handling**:  \n   Configure how the output data from **workflows** is returned using the `raw_data_output` flag:\n   - Set `raw_data_output` to `true` to receive only the output of the End node without Dify metadata.\n   - Default setting is `false`, which includes Dify metadata in the response.\n\n   This configuration ensures output data aligns perfectly with the requirements of your integration.\n\n8. **Available Endpoints**:  \n   You have access to two endpoint URLs:\n   - **Chatflow Endpoint**: `/chatflow/<app_id>`\n   - **Workflow Endpoint**: `/workflow/<app_id>`\n\n### 📘 Usage Guide\n\n#### 🔊 Chatflow Endpoint\n\nTrigger a chatflow by sending a POST request to the chatflow endpoint:\n\n- **URL Without App**: `/chatflow/<app_id>`\n- **URL With App**: `/single-chatflow`\n- **Method**: `POST`\n- **Headers**:\n  - `Content-Type: application/json`\n  - If using an API key: `X-API-Key: <your_api_key>`\n- **Body** (JSON):\n  ```json\n  {\n    \"query\": \"Hi\",\n    \"inputs\": { \"name\": \"John\" },\n    \"conversation_id\": \"\"\n  }\n  ```\n\nFor endpoints configured with a specific Dify app, use the `/single-chatflow` route. A successful response will include the chatflow output.\n\n#### 🔄 Workflow Endpoint\n\nTo initiate a workflow, send a POST request to the workflow endpoint:\n\n- **URL Without App**: `/workflow/<app_id>`\n- **URL With App**: `/single-workflow`\n- **Method**: `POST`\n- **Headers**:\n  - `Content-Type: application/json`\n  - If using an API key: `X-API-Key: <your_api_key>`\n- **Body** (JSON):\n  ```json\n  {\n    \"inputs\": { \"name\": \"John\" }\n  }\n  ```\n\nFor endpoints configured with a specific Dify app, use the `/single-workflow` route. The response will contain results from the workflow execution.\n\n### 🧩 Customization with Middlewares\n\nThe plugin supports middleware for extended functionality:\n\n1. **Discord Webhook Integration**:  \n   Built-in support for Discord interaction verification and response handling.\n\n2. **Default Middleware**:  \n   Provides JSON string conversion functionality.\n\n3. **Custom Middlewares**:  \n   You can develop additional middlewares to:\n   - Verify signatures from other platforms\n   - Transform request and response data\n   - Implement custom authentication methods\n   - Handle special payload formats\n\n### ⚙️ Advanced Configuration Examples\n\n#### Multiple Endpoints Configuration\n\nYou can create multiple endpoints with different configurations:\n\n- **Discord Bot Endpoint**: With Discord middleware and no API key\n- **Zapier Integration**: With API key in URL parameter and raw data output\n- **Internal Systems**: With API key in header and full response data\n\n#### Custom Response Formatting\n\nFor workflows that need to integrate with systems expecting specific response formats:\n1. Configure the endpoint with `raw_data_output: true`\n2. In your Dify workflow, ensure the End node provides exactly the format expected\n\n### 🔍 Troubleshooting\n\n- Use valid JSON for request bodies to avoid parsing errors.\n- Successful requests return a 200 status code. Unauthorized access returns a 403 status code unless API key location is set to `none`.\n- Proper error messages are given for input validation failures, returning a 400 status code.\n\nLeverage the power of Dify by automating your chatflow and workflow triggers efficiently using this webhook plugin! 🎉\n\n### 🙏 Acknowledgments\n\nSpecial thanks to the Dify team for delivering a fantastic developer experience and tools that facilitated the creation of this plugin. The first version of this plugin was developed during a beta program, and we appreciate the support and resources made available throughout the period. ❤️",
        "label": {
            "en_US": "Webhook",
            "pt_BR": "Webhook",
            "zh_Hans": "网络钩子"
        },
        "latest_package_identifier": "perzeuss/webhook:0.5.0@9c196a35c1c0619ee5436bbf1c5fb942b279a198416e5b3ff7b62572a0a128bf",
        "latest_version": "0.5.0",
        "model": {},
        "name": "webhook",
        "org": "perzeuss",
        "plugin_id": "perzeuss/webhook",
        "plugins": {
            "agent_strategies": null,
            "endpoints": [
                "group/webhook.yaml"
            ],
            "models": null,
            "tools": null
        },
        "privacy_options": "",
        "privacy_policy": "PRIVACY.md",
        "repository": "",
        "resource": {
            "memory": 268435456,
            "permission": {
                "app": {
                    "enabled": true
                },
                "endpoint": {
                    "enabled": true
                }
            }
        },
        "status": "active",
        "tags": [],
        "tool": {},
        "type": "plugin",
        "updated_at": "2025-03-08T17:02:23Z",
        "version_updated_at": "2025-03-08T17:02:23Z"
    },
    {
        "agent_strategy": {},
        "badges": [
            "partner"
        ],
        "brief": {
            "en_US": "The Agora Conversational AI extension enables developers to build voice assistants powered by Dify Agent.",
            "ja_JP": "Agora会話型AI拡張機能は、開発者がDify Agentを活用して高機能な音声アシスタントを構築できるようにします。",
            "pt_BR": "A extensão de IA Conversacional da Agora permite que desenvolvedores criem assistentes de voz poderosos com o suporte do Dify Agent.",
            "zh_Hans": "Agora 会话式 AI 插件让开发者能够借助 Dify Agent 构建功能强大的语音助手。"
        },
        "category": "extension",
        "created_at": "2025-02-19T04:26:03Z",
        "endpoint": {
            "endpoints": [
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/convoai/<action>"
                },
                {
                    "hidden": false,
                    "method": "GET",
                    "path": "/convoai-token/<channel>/<uid>"
                },
                {
                    "hidden": false,
                    "method": "GET",
                    "path": "/convoai-web/<file>"
                }
            ],
            "settings": [
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "App",
                        "pt_BR": "App",
                        "zh_Hans": "App"
                    },
                    "name": "app",
                    "options": null,
                    "placeholder": null,
                    "required": true,
                    "scope": "chat",
                    "type": "app-selector",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Agora App ID",
                        "pt_BR": "Agora App ID",
                        "zh_Hans": "Agora App ID"
                    },
                    "name": "agora_app_id",
                    "options": null,
                    "placeholder": {
                        "en_US": "App ID for your Agora project",
                        "pt_BR": "App ID for your Agora project",
                        "zh_Hans": "你的 Agora 项目的 App ID"
                    },
                    "required": true,
                    "scope": null,
                    "type": "text-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Agora RESTful Customer ID",
                        "pt_BR": "Agora RESTful Customer ID",
                        "zh_Hans": "Agora RESTful 鉴权 ID"
                    },
                    "name": "agora_restful_customer_id",
                    "options": null,
                    "placeholder": {
                        "en_US": "This value is used to authenticate your Agora RESTful API",
                        "pt_BR": "This value is used to authenticate your Agora RESTful API",
                        "zh_Hans": "这个值用于鉴权你的 Agora RESTful API"
                    },
                    "required": true,
                    "scope": null,
                    "type": "text-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Agora RESTful Customer Secret",
                        "pt_BR": "Agora RESTful Customer Secret",
                        "zh_Hans": "Agora RESTful 鉴权 Secret"
                    },
                    "name": "agora_restful_customer_secret",
                    "options": null,
                    "placeholder": {
                        "en_US": "This value is used to authenticate your Agora RESTful API",
                        "pt_BR": "This value is used to authenticate your Agora RESTful API",
                        "zh_Hans": "这个值用于鉴权你的 Agora RESTful API"
                    },
                    "required": true,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "TTS Vendor",
                        "pt_BR": "TTS tts_vendor",
                        "zh_Hans": "TTS 供应商"
                    },
                    "name": "tts_vendor",
                    "options": [
                        {
                            "label": {
                                "en_US": "ElevenLabs",
                                "pt_BR": "ElevenLabs",
                                "zh_Hans": "ElevenLabs"
                            },
                            "value": "elevenlabs"
                        },
                        {
                            "label": {
                                "en_US": "Azure",
                                "pt_BR": "Azure",
                                "zh_Hans": "Azure"
                            },
                            "value": "microsoft"
                        }
                    ],
                    "placeholder": null,
                    "required": true,
                    "scope": null,
                    "type": "select",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "TTS Params",
                        "pt_BR": "TTS Params",
                        "zh_Hans": "TTS 参数"
                    },
                    "name": "tts_params",
                    "options": null,
                    "placeholder": {
                        "en_US": "TTS Params in JSON format",
                        "pt_BR": "TTS Params in JSON format",
                        "zh_Hans": "TTS 参数以 JSON 格式填写"
                    },
                    "required": true,
                    "scope": null,
                    "type": "text-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Greeting Message",
                        "pt_BR": "Greeting Message",
                        "zh_Hans": "欢迎语"
                    },
                    "name": "greeting_message",
                    "options": null,
                    "placeholder": {
                        "en_US": "This message will be sent to the user when they first start the conversation",
                        "pt_BR": "This message will be sent to the user when they first start the conversation",
                        "zh_Hans": "这个消息会在用户第一次开始对话时发送给用户"
                    },
                    "required": false,
                    "scope": null,
                    "type": "text-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Failure Message",
                        "pt_BR": "Failure Message",
                        "zh_Hans": "错误信息"
                    },
                    "name": "failure_message",
                    "options": null,
                    "placeholder": {
                        "en_US": "This message will be sent to the user when the conversation has error",
                        "pt_BR": "This message will be sent to the user when the conversation has error",
                        "zh_Hans": "这个消息会在对话出现错误时发送给用户"
                    },
                    "required": false,
                    "scope": null,
                    "type": "text-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Agora App Certificate",
                        "pt_BR": "Agora App Certificate",
                        "zh_Hans": "Agora App Certificate"
                    },
                    "name": "agora_app_cert",
                    "options": null,
                    "placeholder": {
                        "en_US": "This value is only needed when you have turned on security token for your Agora project",
                        "pt_BR": "This value is only needed when you have turned on security token for your Agora project",
                        "zh_Hans": "只有在你开启了 Agora 安全Token时才需要填写"
                    },
                    "required": false,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "API key",
                        "pt_BR": "API key",
                        "zh_Hans": "API key"
                    },
                    "name": "api_key",
                    "options": null,
                    "placeholder": {
                        "en_US": "This is used to protect your API endpoint",
                        "pt_BR": "This is used to protect your API endpoint",
                        "zh_Hans": "这个值用于保护你的 API Endpoint"
                    },
                    "required": false,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                }
            ]
        },
        "icon": "plutoless/packages/convoai/_assets/icon.svg",
        "index_id": "plutoless___convoai",
        "install_count": 1284,
        "introduction": "## Agora Conversational AI\r\n\r\n**Author:** plutoless\r\n**Version:** 0.0.6\r\n**Type:** extension\r\n\r\n### Description\r\n\r\n#### Overview\r\n\r\nThis extension provides an endpoint to make Dify agents work with Agora’s Conversational AI Engine to easily turn your Dify agents into voice assistants.\r\n\r\n#### Prerequisites\r\n\r\n- **Agora Account**\r\n    You need an Agora account to use the Agora Conversational AI service. You can sign up for a free account at [Agora](https://sso.agora.io/en/signup/).\r\n- **Agora App ID / App Certificate / RESTful Customer ID / RESTful Customer Secret**\r\n    You need to create an Agora project and get the App ID, App Certificate, RESTful Customer ID and RESTful Customer Secret from [Agora Console](https://console.agora.io/v2). Note to enable the Agora Conversational AI service in the Agora Console.\r\n- **TTS Vendor Account**\r\n    You need an account for the TTS vendor you choose. The TTS vendor provides the voice synthesis service for the voice assistant. \r\n\r\n#### Configuration\r\n\r\n- **APP**\r\n    To turn a Dify agent into a voice assistant, choose one from your agent library.\r\n- **Agora App ID**\r\n    In the [Agora Console](https://console.agora.io/v2), get your Agora App ID and enable the Conversational AI Engine service.\r\n- **Agora RESTful Customer ID**\r\n   In the [Agora Console](https://console.agora.io/v2), get the Agora RESTful Customer ID.\r\n- **Agora RESTful Customer Secret**\r\n   In the [Agora Console](https://console.agora.io/v2), get the Agora RESTful Customer Secret.\r\n- **TTS Vendor**\r\n    The TTS vendor to use for voice synthesis. Choose one from the list below.\r\n  - **Azure**\r\n  - **ElevenLabs**\r\n- **TTS Vendor Params**\r\n    The parameters for the TTS vendor. The parameters are different for each vendor, please refer to the vendor's documentation for more information.\r\n  - **Azure**\r\n\r\n    ```json\r\n    {\r\n        \"key\": \"<your api key>\",\r\n        \"region\": \"eastasia\",\r\n        \"voice_name\": \"en-US-AndrewMultilingualNeural\"\r\n    }\r\n    ```\r\n\r\n  - **ElevenLabs**\r\n\r\n    ```json\r\n    {\r\n        \"key\": \"<your api key>\",\r\n        \"model_id\": \"eleven_flash_v2_5\",\r\n        \"voice_id\": \"pNInz6obpgDQGcFmaJgB\"\r\n    }\r\n    ```\r\n\r\n- **Greeting Message**\r\n    The message to greet the user when the conversation starts.\r\n- **Failure Message**\r\n    The message to tell the user when the conversation fails.\r\n- **Agora App Certificate**\r\n    The Agora App Certificate to use for RTC service. Get it from [Agora Console](https://console.agora.io/v2). Only needed when security token is enabled for your Agora project.\r\n- **API Key**\r\n    The API Key to protect your Dify endpoint.\r\n\r\n#### Usage\r\n\r\nOnce you finish the configuration, you'll fnd the APl in the endpoint as follows:\r\n\r\n`https://qv90***.ai-plugin.io/convoai-web/<file>`\r\n\r\nReplace `<file>` with `index.html`,\r\n\r\nThen you may navigate to the following URL to access the integrated Conversational Al web page.\r\n\r\n`https://qv90***.ai-plugin.io/convoai-web/index.html`\r\n\r\n#### Using API without Web Page\r\n\r\nYou can also use the API directly without the web page. The API endpoint is:\r\n\r\n##### Start Conversation\r\n\r\nAPI Endpoint: `https://qv90***.ai-plugin.io/convoai-start`\r\n\r\n| key | value |\r\n| --- | --- |\r\n| base_url | The base url of the extension |\r\n| channel | The channel id of the extension |\r\n\r\nExample cURL:\r\n\r\n```bash\r\ncurl 'https://qv90***.ai-plugin.io/convoai/convoai-start' \\\r\n  -H 'accept: application/json, text/plain, */*' \\\r\n  -H 'accept-language: zh,en;q=0.9,zh-CN;q=0.8' \\\r\n  -H 'cache-control: no-cache' \\\r\n  -H 'content-type: application/json' \\\r\n  --data-raw '{\"base_url\":\"https://qv90***.ai-plugin.io\",\"channel\":\"jh0y8fgk7\"}'\r\n```\r\n\r\n##### Stop Conversation\r\n\r\nAPI Endpoint: `https://qv90***.ai-plugin.io/convoai-stop`\r\n\r\n| key | value |\r\n| --- | --- |\r\n| agent_id | The agent id of the extension |\r\n\r\nExample cURL:\r\n\r\n```bash\r\ncurl 'https://qv90***.ai-plugin.io/convoai/convoai-stop' \\\r\n  -H 'accept: application/json, text/plain, */*' \\\r\n  -H 'accept-language: zh,en;q=0.9,zh-CN;q=0.8' \\\r\n  -H 'cache-control: no-cache' \\\r\n  -H 'content-type: application/json' \\\r\n  --data-raw '{\"agent_id\":\"1NT29X0ZX0JYPJ96CCL8F4Y4VUEGR566\"}'\r\n```\r\n",
        "label": {
            "en_US": "Agora Conversational AI",
            "ja_JP": "Agora Conversational AI",
            "pt_BR": "Agora Conversational AI",
            "zh_Hans": "Agora Conversational AI"
        },
        "latest_package_identifier": "plutoless/convoai:0.0.6@cf1835095b3ac8f969e1e485bb1bdd9c328bb1598f71105def3a75b39a78ccb3",
        "latest_version": "0.0.6",
        "model": {},
        "name": "convoai",
        "org": "plutoless",
        "plugin_id": "plutoless/convoai",
        "plugins": {
            "agent_strategies": null,
            "endpoints": [
                "group/convoai.yaml"
            ],
            "models": null,
            "tools": null
        },
        "privacy_options": "",
        "privacy_policy": "PRIVACY.md",
        "repository": "",
        "resource": {
            "memory": 268435456,
            "permission": {
                "app": {
                    "enabled": true
                },
                "endpoint": {
                    "enabled": true
                }
            }
        },
        "status": "active",
        "tags": [],
        "tool": {},
        "type": "plugin",
        "updated_at": "2025-03-24T01:48:10Z",
        "version_updated_at": "2025-03-24T01:48:10Z"
    },
    {
        "agent_strategy": {},
        "badges": [],
        "brief": {
            "en_US": "link dify with wechat subscription account",
            "ja_JP": "difyとウェチャットサブスクリプションアカウントを接続します",
            "pt_BR": "link dify with wechat subscription account",
            "zh_Hans": "连接dify与微信公众号"
        },
        "category": "extension",
        "created_at": "2025-03-13T16:40:25Z",
        "endpoint": {
            "endpoints": [
                {
                    "hidden": false,
                    "method": "GET",
                    "path": "/wechat/input"
                },
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/wechat/input"
                }
            ],
            "settings": [
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "App",
                        "zh_Hans": "App"
                    },
                    "name": "app",
                    "options": null,
                    "placeholder": null,
                    "required": true,
                    "scope": "chat",
                    "type": "app-selector",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Wechat Token",
                        "zh_Hans": "微信公众号 Token"
                    },
                    "name": "wechat_token",
                    "options": null,
                    "placeholder": null,
                    "required": true,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Wechat EncodingAESKey",
                        "zh_Hans": "微信公众号 EncodingAESKey,配了就填,不配就留空"
                    },
                    "name": "encoding_aes_key",
                    "options": null,
                    "placeholder": null,
                    "required": false,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Wechat AppId",
                        "zh_Hans": "微信公众号 AppId"
                    },
                    "name": "app_id",
                    "options": null,
                    "placeholder": null,
                    "required": false,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Wechat AppSecret",
                        "zh_Hans": "微信公众号 AppSecret,如果需要发客服消息,则需要配"
                    },
                    "name": "app_secret",
                    "options": null,
                    "placeholder": null,
                    "required": false,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Timeout Message",
                        "zh_Hans": "超时提示信息,默认值为\"内容生成耗时较长，请稍等...\""
                    },
                    "name": "timeout_message",
                    "options": null,
                    "placeholder": null,
                    "required": false,
                    "scope": null,
                    "type": "text-input",
                    "url": null
                }
            ]
        },
        "icon": "bikeread/packages/dify_wechat_plugin/_assets/icon.svg",
        "index_id": "bikeread___dify_wechat_plugin",
        "install_count": 1204,
        "introduction": "# Dify微信公众号插件\n\n**作者:** bikeread  \n**版本:** 0.0.1  \n**类型:** extension  \n\n## 项目概述\n\nDify微信公众号插件专为自媒体运营者和公众号主理人打造，将AI能力无缝接入您的微信公众号，提供24小时智能客服与内容助手服务。\n\n## 核心价值\n\n1. **智能粉丝互动**: 提供24小时不间断对话服务，提升粉丝活跃度\n2. **内容辅助创作**: 为粉丝提供专业问题解答和创意支持\n3. **数据收集分析**: 了解粉丝关注点，发现内容机会\n4. **降低运营成本**: 自动回复常见问题，减轻人工客服负担\n\n## 主要功能\n\n- **基础支持**: 服务器验证、明文/加密模式、Dify AI智能回复\n- **多类型消息**: 支持文本消息，即将支持图片、语音和链接消息\n- **会话管理**: 支持对话记忆和历史清除功能\n- **技术优化**: 解决微信5秒超时限制，延长至15秒，支持流式响应\n\n## 运营价值\n\n- 提升粉丝活跃度和留存率\n- 差异化竞争优势\n- 数据驱动内容创作\n- 全天候服务能力\n\n## 快速配置\n\n### 微信公众号配置\n\n1. 登录微信公众平台（https://mp.weixin.qq.com/）\n2. 进入\"设置与开发\" -> \"基本配置\"\n3. 在\"服务器配置\"部分：\n   - URL设置为您的Dify插件访问地址，例如：`http://your-domain.com/wechat/input`\n   - Token设置一个自定义的安全令牌\n   - 选择消息加解密方式\n   - 如需加密模式，设置EncodingAESKey\n\n### 插件配置\n\n必选参数：\n- `wechat_token`: 与公众号平台配置相同的Token\n\n加密模式参数：\n- `encoding_aes_key`: 与公众号平台配置的EncodingAESKey\n- `app_id`: 公众号的AppID\n\n客服消息支持：\n- `app_secret`: 公众号的AppSecret\n\n可选参数：\n- `timeout_message`: 超时时发送的临时响应消息\n\n## 加密模式说明\n\n微信公众平台支持三种消息加解密方式：\n\n1. **明文模式**：消息以明文方式传输，不进行加密。\n   - 配置简单，但安全性较低\n   - 只需配置`wechat_token`，无需设置`encoding_aes_key`和`app_id`\n\n2. **兼容模式/安全模式**：消息需要加密处理。\n   - 安全性更高，需要额外的加解密处理\n   - 需要配置：`wechat_token`, `encoding_aes_key`, `app_id`\n\n## 使用方法\n\n1. 完成插件配置，保存并启用\n2. 用户发送消息至公众号\n3. 系统自动调用AI处理并回复\n4. 发送\"清除历史聊天记录\"可重置对话\n\n## 架构说明\n\n本插件采用模块化设计，主要组件包括：\n\n### 目录结构\n```\nendpoints/\n├── wechat/                    # 微信处理核心模块\n│   ├── __init__.py            # 包初始化文件\n│   ├── models.py              # 定义WechatMessage消息模型\n│   ├── parsers.py             # 定义XML解析器\n│   ├── formatters.py          # 定义响应格式化器\n│   ├── factory.py             # 定义消息处理器工厂\n│   ├── crypto.py              # 微信消息加解密工具\n│   ├── retry_tracker.py       # 消息重试跟踪器\n│   ├── api/                   # API调用相关\n│   │   ├── __init__.py        # API包初始化\n│   │   └── custom_message.py  # 客服消息发送器\n│   └── handlers/              # 消息处理器\n│       ├── __init__.py        # 处理器包初始化\n│       ├── base.py            # 定义处理器抽象基类\n│       ├── text.py            # 文本消息处理器\n│       ├── image.py           # 图片消息处理器\n│       ├── voice.py           # 语音消息处理器\n│       ├── link.py            # 链接消息处理器\n│       └── unsupported.py     # 不支持的消息类型处理器\n├── wechat_get.py              # 处理微信服务器验证请求\n└── wechat_post.py             # 处理用户发送的消息\n```\n\n### 消息处理流程\n\n1. **消息接收**：`wechat_post.py` 接收微信服务器发来的消息\n2. **消息解析**：使用 `MessageParser` 解析XML格式的消息\n3. **重试检测**：使用 `MessageStatusTracker` 判断是否为重试请求\n4. **消息处理**：\n   - 首次请求：启动异步线程处理，等待一定时间（默认5.0秒）\n   - 重试请求：先等待一段较短时间（默认4.0秒），然后根据处理状态返回适当响应\n5. **响应返回**：使用 `ResponseFormatter` 格式化回复，加密后返回\n6. **后台处理**：如果处理超时，通过客服消息发送完整回复\n\n### 设计模式\n\n本插件使用了多种设计模式：\n\n1. **策略模式**: 通过`MessageHandler`抽象类定义统一接口，不同消息类型使用不同的实现\n2. **工厂模式**: 使用`MessageHandlerFactory`根据消息类型创建相应处理器\n3. **适配器模式**: 使用解析器和格式化器转换不同格式的数据\n4. **装饰器模式**: 使用装饰器处理消息的加解密\n5. **观察者模式**: 使用线程和事件通知机制监控处理完成\n6. **异步处理模式**: 使用子线程处理长耗时请求，避免微信超时\n7. **单例模式**: `MessageStatusTracker`使用类变量实现单例状态跟踪\n\n## 扩展开发指南\n\n### 添加新的消息类型支持\n\n要添加对新消息类型（如视频、小程序消息等）的支持，按以下步骤操作：\n\n1. 在`handlers`目录下创建新的处理器类，继承`MessageHandler`：\n\n```python\n# handlers/video.py\nfrom typing import Dict, Any\nfrom .base import MessageHandler\nfrom ..models import WechatMessage\n\nclass VideoMessageHandler(MessageHandler):\n    def handle(self, message: WechatMessage, session: Any, app_settings: Dict[str, Any]) -> str:\n        # 实现视频消息处理逻辑\n        # ...\n        return \"收到您的视频，正在处理...\"\n```\n\n2. 在`MessageHandlerFactory`中注册新的处理器：\n\n```python\n# 在项目初始化时注册\nfrom endpoints.wechat.factory import MessageHandlerFactory\nfrom endpoints.wechat.handlers.video import VideoMessageHandler\n\nMessageHandlerFactory.register_handler('video', VideoMessageHandler)\n```\n\n### 自定义响应格式\n\n要支持更复杂的响应格式（如图文消息），可以扩展`ResponseFormatter`：\n\n```python\n@staticmethod\ndef format_news_xml(message: WechatMessage, articles: list) -> str:\n    # 实现图文消息XML格式化\n    # ...\n```\n",
        "label": {
            "en_US": "Wechat Subscription Account",
            "ja_JP": "ウェチャットサブスクリプションアカウント",
            "pt_BR": "Conta de Assinatura do Wechat",
            "zh_Hans": "微信公众号对接助手"
        },
        "latest_package_identifier": "bikeread/dify_wechat_plugin:0.0.1@b9413c503ce253ecbe5d7831442a20ed8d21aeb355add8130e936bda2915747a",
        "latest_version": "0.0.1",
        "model": {},
        "name": "dify_wechat_plugin",
        "org": "bikeread",
        "plugin_id": "bikeread/dify_wechat_plugin",
        "plugins": {
            "agent_strategies": null,
            "endpoints": [
                "group/wechat_sub.yaml"
            ],
            "models": null,
            "tools": null
        },
        "privacy_options": "",
        "privacy_policy": "PRIVACY.md",
        "repository": "",
        "resource": {
            "memory": 268435456,
            "permission": {
                "app": {
                    "enabled": true
                },
                "endpoint": {
                    "enabled": true
                },
                "model": {
                    "enabled": true,
                    "llm": true,
                    "moderation": true,
                    "rerank": true,
                    "speech2text": true,
                    "text_embedding": true,
                    "tts": true
                },
                "storage": {
                    "enabled": true,
                    "size": 1048576000
                },
                "tool": {
                    "enabled": true
                }
            }
        },
        "status": "active",
        "tags": [],
        "tool": {},
        "type": "plugin",
        "updated_at": "2025-03-13T16:40:31Z",
        "version_updated_at": "2025-03-13T16:40:31Z"
    },
    {
        "agent_strategy": {},
        "badges": [],
        "brief": {
            "en_US": "Your waifu is here.",
            "zh_Hans": "你的老婆在这里。"
        },
        "category": "extension",
        "created_at": "2025-03-07T13:34:22Z",
        "endpoint": {
            "endpoints": [
                {
                    "hidden": false,
                    "method": "GET",
                    "path": "/"
                },
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/api/chat"
                },
                {
                    "hidden": false,
                    "method": "GET",
                    "path": "/asset/<path:path>"
                },
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/api/file/<name>"
                },
                {
                    "hidden": false,
                    "method": "GET",
                    "path": "/api/file/<name>"
                }
            ],
            "settings": [
                {
                    "default": "Candy",
                    "help": null,
                    "label": {
                        "en_US": "Bot name",
                        "pt_BR": "Nome do bot",
                        "zh_Hans": "机器人名称"
                    },
                    "name": "bot_name",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please input your bot name",
                        "pt_BR": "Por favor, insira o nome do seu bot",
                        "zh_Hans": "请输入你的机器人名称"
                    },
                    "required": true,
                    "scope": null,
                    "type": "text-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "App",
                        "pt_BR": "App",
                        "zh_Hans": "App"
                    },
                    "name": "app",
                    "options": null,
                    "placeholder": null,
                    "required": true,
                    "scope": "chat",
                    "type": "app-selector",
                    "url": null
                }
            ]
        },
        "icon": "yeuoly/packages/waifu/_assets/waifu.gif",
        "index_id": "yeuoly___waifu",
        "install_count": 618,
        "introduction": "# Waifu\n\nAuthor: [@Yeuoly](https://github.com/Yeuoly)\n\nWaifu is a Dify plugin that allows you to chat with a kawaii style webapp.\n\n## Overview\n\n![Overview](./_assets/chat.png)\n\nYou can setup your own waifu by uploading a custom avatar and background also.\n\n![Setup](./_assets/upload.png)\n\n## Usage\n\nInstall the plugin \n\n![Install](./_assets/install.png)\n\nThen setup this plugin in the `Plugin` page.\n\n![Setup](./_assets/setup1.png)\n\nFinally, click here to start chatting with your waifu.\n\n![Chat](./_assets/setup.png)\n",
        "label": {
            "en_US": "Waifu"
        },
        "latest_package_identifier": "yeuoly/waifu:0.0.1@29f712ac2be29d57371108b4de2b3e6f7480df5af6e8a77f170016bd591c648a",
        "latest_version": "0.0.1",
        "model": {},
        "name": "waifu",
        "org": "yeuoly",
        "plugin_id": "yeuoly/waifu",
        "plugins": {
            "agent_strategies": null,
            "endpoints": [
                "provider/waifu.yaml"
            ],
            "models": null,
            "tools": null
        },
        "privacy_options": "",
        "privacy_policy": "",
        "repository": "",
        "resource": {
            "memory": 1048576,
            "permission": {
                "app": {
                    "enabled": true
                },
                "endpoint": {
                    "enabled": true
                },
                "model": {
                    "enabled": true,
                    "llm": true,
                    "moderation": false,
                    "rerank": false,
                    "speech2text": false,
                    "text_embedding": false,
                    "tts": true
                },
                "storage": {
                    "enabled": true,
                    "size": 1048576
                },
                "tool": {
                    "enabled": true
                }
            }
        },
        "status": "active",
        "tags": [],
        "tool": {},
        "type": "plugin",
        "updated_at": "2025-03-07T13:34:40Z",
        "version_updated_at": "2025-03-07T13:34:40Z"
    },
    {
        "agent_strategy": {},
        "badges": [],
        "brief": {
            "en_US": "make dify's workflow as a MCP server",
            "ja_JP": "make dify's workflow as a MCP server",
            "pt_BR": "make dify's workflow as a MCP server",
            "zh_Hans": "make dify's workflow as a MCP server"
        },
        "category": "extension",
        "created_at": "2025-03-19T18:51:15Z",
        "endpoint": {
            "endpoints": [
                {
                    "hidden": false,
                    "method": "GET",
                    "path": "/sse"
                },
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/messages/"
                }
            ],
            "settings": [
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "App"
                    },
                    "name": "app",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please select an app",
                        "zh_Hans": "请选择一个应用"
                    },
                    "required": true,
                    "scope": "all",
                    "type": "app-selector",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "App Type"
                    },
                    "name": "app-type",
                    "options": [
                        {
                            "label": {
                                "en_US": "Chat"
                            },
                            "value": "chat"
                        },
                        {
                            "label": {
                                "en_US": "Workflow"
                            },
                            "value": "workflow"
                        }
                    ],
                    "placeholder": null,
                    "required": true,
                    "scope": null,
                    "type": "select",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "App Input Schema"
                    },
                    "name": "app-input-schema",
                    "options": null,
                    "placeholder": {
                        "en_US": "the json format of your app input schema",
                        "zh_Hans": "请输入应用所需输入的 json 格式"
                    },
                    "required": true,
                    "scope": null,
                    "type": "text-input",
                    "url": null
                }
            ]
        },
        "icon": "hjlarry/packages/mcp-server/_assets/icon.svg",
        "index_id": "hjlarry___mcp-server",
        "install_count": 615,
        "introduction": "# MCP Server\n\n[![Version](https://img.shields.io/badge/version-0.0.1-blue.svg)](https://github.com/hjlarry/dify-plugin-mcp_server)\n[![Repo](https://img.shields.io/badge/repo&issue-github-green.svg)](https://github.com/hjlarry/dify-plugin-mcp_server)\n\nA Dify endpoint plugin that change a dify app to a mcp server.\n\n**To keep your data secure, use this plugin exclusively within your private network.**\n\n## Get Started\n\n### 1. create a simple workflow app in dify.\n![1](./_assets/1.png)\n\n### 2. add a endpoint and select this app.\n![2](./_assets/2.png)\n\nThe app's input schema must define its input parameters. For a chat dify app, ensure to include a `query` field in the input schema, formatted as follows:\n```json\n{\n    \"name\": \"get_weather\",\n    \"description\": \"Get weather status for a place.\",\n    \"inputSchema\": {\n        \"properties\": {\n            \"place\": {\"title\": \"Place\", \"type\": \"string\"}\n        },\n        \"required\": [\"place\"],\n        \"title\": \"get_weatherArguments\",\n        \"type\": \"object\"\n    }\n}\n```\n\n### 3. copy the endpoint url to your mcp client, like `Cherry Studio`\n![3](./_assets/3.png)\n![4](./_assets/4.png)\n\n### 4. enjoy it!\n![5](./_assets/5.png)\n",
        "label": {
            "en_US": "mcp-server",
            "ja_JP": "mcp-server",
            "pt_BR": "mcp-server",
            "zh_Hans": "mcp-server"
        },
        "latest_package_identifier": "hjlarry/mcp-server:0.0.1@85ebd44517bc8bcfbd8d12e35e9ae5545110ecc9df3547b92e28d24255f96cf0",
        "latest_version": "0.0.1",
        "model": {},
        "name": "mcp-server",
        "org": "hjlarry",
        "plugin_id": "hjlarry/mcp-server",
        "plugins": {
            "agent_strategies": null,
            "endpoints": [
                "group/mcp-server.yaml"
            ],
            "models": null,
            "tools": null
        },
        "privacy_options": "",
        "privacy_policy": "PRIVACY.md",
        "repository": "",
        "resource": {
            "memory": 268435456,
            "permission": {
                "app": {
                    "enabled": true
                },
                "endpoint": {
                    "enabled": true
                },
                "storage": {
                    "enabled": true,
                    "size": 1048576
                }
            }
        },
        "status": "active",
        "tags": [],
        "tool": {},
        "type": "plugin",
        "updated_at": "2025-03-19T18:51:33Z",
        "version_updated_at": "2025-03-19T18:51:33Z"
    },
    {
        "agent_strategy": null,
        "badges": [],
        "brief": {
            "en_US": "Neko is a cute cat.",
            "zh_Hans": "这是一只可爱的小猫。"
        },
        "category": "extension",
        "created_at": "2024-11-22T08:07:10Z",
        "endpoint": {
            "endpoints": [
                {
                    "method": "GET",
                    "path": "/duck/<app_id>"
                },
                {
                    "method": "GET",
                    "path": "/neko"
                }
            ],
            "settings": [
                {
                    "default": null,
                    "helper": null,
                    "label": {
                        "en_US": "API key",
                        "pt_BR": "API key",
                        "zh_Hans": "API key"
                    },
                    "name": "api_key",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please input your API key",
                        "pt_BR": "Please input your API key",
                        "zh_Hans": "请输入你的 API key"
                    },
                    "required": true,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                }
            ]
        },
        "icon": "langgenius/packages/neko/_assets/neko.gif",
        "index_id": "langgenius___neko",
        "install_count": 547,
        "introduction": "# Neko Plugin\n\nThis is an example of Dify Endpoint Plugin.",
        "label": {
            "en_US": "Neko"
        },
        "latest_package_identifier": "langgenius/neko:0.0.2@2adb9952e0f63b489ef8bf4b14c8c80c6621b5b5592787c57243ef94d6fd4b28",
        "latest_version": "0.0.2",
        "model": {},
        "name": "neko",
        "org": "langgenius",
        "plugin_id": "langgenius/neko",
        "plugins": {
            "endpoints": [
                "provider/neko.yaml"
            ],
            "models": null,
            "tools": null
        },
        "privacy_options": "",
        "privacy_policy": "",
        "repository": "",
        "resource": {
            "memory": 1048576,
            "permission": {
                "app": {
                    "enabled": true
                },
                "endpoint": {
                    "enabled": true
                },
                "model": {
                    "enabled": true,
                    "llm": true,
                    "moderation": false,
                    "rerank": false,
                    "speech2text": false,
                    "text_embedding": false,
                    "tts": false
                },
                "storage": {
                    "enabled": true,
                    "size": 1048576
                },
                "tool": {
                    "enabled": true
                }
            }
        },
        "status": "active",
        "tags": [
            {
                "name": "other"
            }
        ],
        "tool": {},
        "type": "plugin",
        "updated_at": "2024-11-22T08:07:15Z",
        "version_updated_at": "2024-11-22T08:07:15Z"
    },
    {
        "agent_strategy": {},
        "badges": [],
        "brief": {
            "en_US": "This Slack Bot supports receiving messages from Slack as input to Chatflow/Chatbot/Agent in Dify, and sending messages back to Slack.",
            "ja_JP": "このSlack Botは、SlackからのメッセージをDifyのChatflow/Chatbot/Agentへの入力として受け取り、Slackにメッセージを送信することをサポートします。",
            "pt_BR": "Este Slack Bot suporta receber mensagens do Slack como entrada para Chatflow/Chatbot/Agent no Dify e enviar mensagens de volta para o Slack.",
            "zh_Hans": "这个Slack Bot支持接收来自Slack的消息作为Dify中Chatflow/Chatbot/Agent的输入，并将消息发送回Slack。"
        },
        "category": "extension",
        "created_at": "2024-12-18T15:39:33Z",
        "endpoint": {
            "endpoints": [
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/"
                }
            ],
            "settings": [
                {
                    "default": null,
                    "helper": null,
                    "label": {
                        "en_US": "Bot Token",
                        "ja_JP": "Bot Token",
                        "pt_BR": "Token do Bot",
                        "zh_Hans": "Bot Token"
                    },
                    "name": "bot_token",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please input your Bot Token",
                        "ja_JP": "ボットトークンを入力してください",
                        "pt_BR": "Por favor, insira seu Token do Bot",
                        "zh_Hans": "请输入你的 Bot Token"
                    },
                    "required": true,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": false,
                    "helper": null,
                    "label": {
                        "en_US": "Allow Retry",
                        "ja_JP": "再試行を許可",
                        "pt_BR": "Permitir Retentativas",
                        "zh_Hans": "允许重试"
                    },
                    "name": "allow_retry",
                    "options": null,
                    "placeholder": null,
                    "required": false,
                    "scope": null,
                    "type": "boolean",
                    "url": null
                },
                {
                    "default": null,
                    "helper": null,
                    "label": {
                        "en_US": "App",
                        "ja_JP": "アプリ",
                        "pt_BR": "App",
                        "zh_Hans": "应用"
                    },
                    "name": "app",
                    "options": null,
                    "placeholder": {
                        "en_US": "the app you want to use to answer Slack messages",
                        "ja_JP": "あなたが Slack メッセージに回答するために使用するアプリ",
                        "pt_BR": "o app que você deseja usar para responder mensagens do Slack",
                        "zh_Hans": "你想要用来回答 Slack 消息的应用"
                    },
                    "required": true,
                    "scope": null,
                    "type": "app-selector",
                    "url": null
                }
            ]
        },
        "icon": "langgenius/packages/slack-bot/_assets/icon.svg",
        "index_id": "langgenius___slack-bot",
        "install_count": 378,
        "introduction": "## Slack Bot\n\n**Author:** Langgenius  \n**Version:** 0.0.1\n**Type:** extension\n\n### Description\n\nFollow these steps to integrate the Slack plugin:\n\n1. **Create a Slack App**\n\n   - Either create an app from a manifest or from scratch\n   - Name your app and select your target workspace\n     <img src=\"./_assets/step1.png\" width=\"600\" />\n     <img src=\"./_assets/step2.png\" width=\"600\" />\n\n2. **Configure App Settings**\n\n   - Enable Incoming Webhooks\n   - Install the app to your workspace\n   - Choose a channel for message delivery\n   - Locate your \"Bot User OAuth Token\" in settings\n     <img src=\"./_assets/step3.png\" width=\"600\" />\n     <img src=\"./_assets/step4.png\" width=\"600\" />\n     <img src=\"./_assets/step5.png\" width=\"600\" />\n\n3. **Set Up Dify Endpoint**\n\n   - Create a new endpoint with a custom name\n   - Input your Bot User OAuth Token\n   - Set \"Allow Retry\" to false (recommended to prevent duplicate messages)\n   - Link to your Dify chatflow/chatbot/agent\n   - Save and copy the generated endpoint URL\n\n    <div style=\"display: flex; gap: 10px;\">\n      <img src=\"./_assets/step6.png\" width=\"400\" />\n      <img src=\"./_assets/step7.png\" width=\"400\" />\n    </div>\n\n4. **Complete Slack App Configuration**\n\n   - Enable Event Subscriptions\n   - Paste the Dify endpoint URL as the Request URL\n   - Add required OAuth scopes for Event Subscriptions\n   - Configure App's OAuth & Permissions with necessary scopes\n     <img src=\"./_assets/step8.png\" width=\"600\" />\n     <img src=\"./_assets/step9.png\" width=\"600\" />\n\n     <img src=\"./_assets/step10.png\" width=\"400\" />\n\n5. **Final Steps**\n   - Reinstall the app to your workspace if you made changes\n   - Add the bot to your chosen channel\n   - Start interacting by @mentioning the bot in messages\n     <img src=\"./_assets/step11.png\" width=\"600\" />\n     <img src=\"./_assets/step12.png\" width=\"600\" />\n",
        "label": {
            "en_US": "Slack Bot",
            "ja_JP": "Slack Bot",
            "pt_BR": "Slack Bot",
            "zh_Hans": "Slack Bot"
        },
        "latest_package_identifier": "langgenius/slack-bot:0.0.3@019d1acf6599977dde981c9d783e12a98f6c02791a45a158bc1958a69f417c5b",
        "latest_version": "0.0.3",
        "model": {},
        "name": "slack-bot",
        "org": "langgenius",
        "plugin_id": "langgenius/slack-bot",
        "plugins": {
            "agent_strategies": null,
            "endpoints": [
                "group/slack.yaml"
            ],
            "models": null,
            "tools": null
        },
        "privacy_options": "",
        "privacy_policy": "",
        "repository": "",
        "resource": {
            "memory": 268435456,
            "permission": {
                "app": {
                    "enabled": true
                },
                "endpoint": {
                    "enabled": true
                },
                "model": {
                    "enabled": true,
                    "llm": true,
                    "moderation": false,
                    "rerank": false,
                    "speech2text": false,
                    "text_embedding": false,
                    "tts": false
                },
                "storage": {
                    "enabled": true,
                    "size": 1048576
                },
                "tool": {
                    "enabled": true
                }
            }
        },
        "status": "active",
        "tags": [],
        "tool": {},
        "type": "plugin",
        "updated_at": "2025-02-17T07:19:57Z",
        "version_updated_at": "2025-02-17T07:19:57Z"
    },
    {
        "agent_strategy": {},
        "badges": [],
        "brief": {
            "en_US": "Line Bot",
            "ja_JP": "Line Bot",
            "pt_BR": "Line Bot",
            "zh_Hans": "Line Bot"
        },
        "category": "extension",
        "created_at": "2025-03-13T16:20:03Z",
        "endpoint": {
            "endpoints": [
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/"
                }
            ],
            "settings": [
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Channel Secret",
                        "ja_JP": "チャンネルシークレット",
                        "pt_BR": "Segredo do Canal",
                        "zh_Hans": "频道密钥"
                    },
                    "name": "channel_secret",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please input your Channel Secret",
                        "ja_JP": "チャネルシークレットを入力してください",
                        "pt_BR": "Por favor, insira seu Segredo do Canal",
                        "zh_Hans": "请输入你的频道密钥"
                    },
                    "required": true,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "Channel Access Token",
                        "ja_JP": "チャネルアクセストークン",
                        "pt_BR": "Token de Acesso do Canal",
                        "zh_Hans": "频道访问令牌"
                    },
                    "name": "channel_access_token",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please input your Channel Access Token",
                        "ja_JP": "チャネルアクセストークンを入力してください",
                        "pt_BR": "Por favor, insira seu Token de Acesso do Canal",
                        "zh_Hans": "请输入你的频道访问令牌"
                    },
                    "required": true,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "App",
                        "ja_JP": "アプリ",
                        "pt_BR": "App",
                        "zh_Hans": "应用"
                    },
                    "name": "app",
                    "options": null,
                    "placeholder": {
                        "en_US": "the app you want to use to answer Line messages",
                        "ja_JP": "あなたが Line メッセージに回答するために使用するアプリ",
                        "pt_BR": "o app que você deseja usar para responder mensagens do Line",
                        "zh_Hans": "你想要用来回答 Line 消息的应用"
                    },
                    "required": true,
                    "scope": null,
                    "type": "app-selector",
                    "url": null
                }
            ]
        },
        "icon": "kevintsai/packages/linebot/_assets/LINE_Brand_icon.png",
        "index_id": "kevintsai___linebot",
        "install_count": 378,
        "introduction": "# Line Bot Plugin Integration Guide\nAuthor: @kevintsai1202 (https://github.com/kevintsai1202/difyplugin.git)\nVersion: 0.0.3\nType: extension\n\n## What's Changed\n  Bug fixed\n\n## Plugin Overview\nThe Line Bot plugin integrates the Dify chat workflow application with the Line Official Account Messaging API. It enables users to interact with AI through a Line Official Account. The plugin only processes message reception and responses; it does not store any user information.\n\n## Setup Steps\nFollow these steps to install and configure the Line Bot plugin:\n1. Create a Provider and Messaging API Channel\n  Go to the [LINE Developers](https://developers.line.biz) website。 \n  <img src=\"./_assets/2025-03-10 20 34 06.png\" width=\"600\" />\n\n2. Copy the Channel Secret and Channel Access Token of the Messaging API\n  - Navigate to the Basic settings page.\n  - Copy the Channel Secret (if it hasn’t been generated yet, click \"Issue\" to create one).\n  <img src=\"./_assets/2025-03-10 21 07 14.png\" width=\"600\" />\n  - Navigate to the Messaging API page.\n  - Enable Use Webhook.\n  - Copy the Channel Access Token (if it hasn’t been generated yet, click \"Issue\" to create one).\n  <img src=\"./_assets/2025-03-10 21 06 36.png\" width=\"600\" /> \n\n3. Set Up the Dify Line Bot Endpoint\n  - Set an Endpoint Name.\n  - Paste the Channel Secret and Channel Access Token.\n  - Select a Chat Workflow. \n  <img src=\"./_assets/2025-03-10 21 08 10.png\" width=\"600\" />\n\n4. Save and Copy the Line Bot Webhook URL\n  <img src=\"./_assets/2025-03-10 21 02 33.png\" width=\"600\" />\n\n5. Set the Webhook URL and Verify\n  - Return to the Messaging API page on the LINE Developers platform.\n  - Paste the Webhook URL obtained in the previous step.\n  - Verify the Line Bot. \n  <img src=\"./_assets/2025-03-10 21 03 50.png\" width=\"600\" /> \n  <img src=\"./_assets/2025-03-10 21 08 36.png\" width=\"600\" />\n6. Use Line to add the Line Official Account and start chatting with AI.\n  <img src=\"./_assets/S__320659478.jpg\" width=\"600\" />",
        "label": {
            "en_US": "Line Bot",
            "ja_JP": "Line Bot",
            "pt_BR": "Line Bot",
            "zh_Hans": "Line Bot"
        },
        "latest_package_identifier": "kevintsai/linebot:0.0.3@7375a053291d3a926a8c1edb1e258340b6a5d45a8d138d25425077f2fb2241e4",
        "latest_version": "0.0.3",
        "model": {},
        "name": "linebot",
        "org": "kevintsai",
        "plugin_id": "kevintsai/linebot",
        "plugins": {
            "agent_strategies": null,
            "endpoints": [
                "group/linebot.yaml"
            ],
            "models": null,
            "tools": null
        },
        "privacy_options": "",
        "privacy_policy": "PRIVACY.md",
        "repository": "",
        "resource": {
            "memory": 268435456,
            "permission": {
                "app": {
                    "enabled": true
                },
                "endpoint": {
                    "enabled": true
                },
                "model": {
                    "enabled": false,
                    "llm": false,
                    "moderation": false,
                    "rerank": false,
                    "speech2text": false,
                    "text_embedding": false,
                    "tts": false
                },
                "storage": {
                    "enabled": true,
                    "size": 1048576
                }
            }
        },
        "status": "active",
        "tags": [],
        "tool": {},
        "type": "plugin",
        "updated_at": "2025-03-19T02:45:12Z",
        "version_updated_at": "2025-03-19T02:45:12Z"
    },
    {
        "agent_strategy": {},
        "badges": [],
        "brief": {
            "en_US": "Why not play Bad Apple with Dify?",
            "ja_JP": "Bad AppleをDifyで聴く",
            "pt_BR": "Por que não ouvir Bad Apple no Dify?",
            "zh_Hans": "为什么不在Dify上听Bad Apple？"
        },
        "category": "extension",
        "created_at": "2024-11-22T08:06:47Z",
        "endpoint": {
            "endpoints": [
                {
                    "hidden": false,
                    "method": "GET",
                    "path": "/"
                },
                {
                    "hidden": false,
                    "method": "GET",
                    "path": "/pathdata.json"
                }
            ],
            "settings": []
        },
        "icon": "langgenius/packages/badapple/_assets/icon.jpeg",
        "index_id": "langgenius___badapple",
        "install_count": 284,
        "introduction": "## Bad Apple\n\nWhy not just watch it?\n\n### Usage\n\n1. Install it\n2. Setup a endpoint\n3. Copy the first url you saw in the panel, and paste it in your browser.\n4. Enjoy!\n\n### Copyright\n\nFor original author, see [here](https://github.com/buzzbyte/BadApple.SVG), thanks for the great work!",
        "label": {
            "en_US": "Bad Apple",
            "ja_JP": "Bad Apple",
            "pt_BR": "Bad Apple",
            "zh_Hans": "Bad Apple"
        },
        "latest_package_identifier": "langgenius/badapple:0.0.1@21e771e293cc6120e9d3ef04ea8aad590171612cc8e816dbda187f93bff850db",
        "latest_version": "0.0.1",
        "model": {},
        "name": "badapple",
        "org": "langgenius",
        "plugin_id": "langgenius/badapple",
        "plugins": {
            "agent_strategies": null,
            "endpoints": [
                "group/badapple.yaml"
            ],
            "models": null,
            "tools": null
        },
        "privacy_options": "",
        "privacy_policy": "",
        "repository": "",
        "resource": {
            "memory": 268435456,
            "permission": {
                "endpoint": {
                    "enabled": true
                }
            }
        },
        "status": "active",
        "tags": [],
        "tool": {},
        "type": "plugin",
        "updated_at": "2025-02-17T07:19:17Z",
        "version_updated_at": "2025-02-17T07:19:17Z"
    },
    {
        "agent_strategy": {},
        "badges": [],
        "brief": {
            "en_US": "AWS Bedrock Knowledge Base API Endpoint for Dify External Knowledge Base",
            "ja_JP": "AWS Bedrock Knowledge Base API Endpoint for Dify External Knowledge Base",
            "pt_BR": "AWS Bedrock Knowledge Base API Endpoint for Dify External Knowledge Base",
            "zh_Hans": "AWS Bedrock Knowledge Base API Endpoint for Dify External Knowledge Base"
        },
        "category": "extension",
        "created_at": "2025-03-17T11:14:02Z",
        "endpoint": {
            "endpoints": [
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/retrieval"
                }
            ],
            "settings": [
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "AWS Secret Access Key",
                        "pt_BR": "Chave de Acesso Secreta da AWS",
                        "zh_Hans": "AWS 秘密访问密钥"
                    },
                    "name": "aws_secret_access_key",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please input your AWS Secret Access Key",
                        "pt_BR": "Por favor, insira sua Chave de Acesso Secreta da AWS",
                        "zh_Hans": "请输入你的 AWS 秘密访问密钥"
                    },
                    "required": true,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "AWS Access Key ID",
                        "pt_BR": "ID da Chave de Acesso da AWS",
                        "zh_Hans": "AWS 访问密钥 ID"
                    },
                    "name": "aws_access_key_id",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please input your AWS Access Key ID",
                        "pt_BR": "Por favor, insira seu ID da Chave de Acesso da AWS",
                        "zh_Hans": "请输入你的 AWS 访问密钥 ID"
                    },
                    "required": true,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                },
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "AWS Region Name",
                        "pt_BR": "Nome da Região AWS",
                        "zh_Hans": "AWS 区域名称"
                    },
                    "name": "region_name",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please input your AWS Region Name (e.g., us-east-1)",
                        "pt_BR": "Please input your AWS Region Name (e.g., us-east-1)",
                        "zh_Hans": "请输入你的 AWS 区域名称（例如：us-east-1）"
                    },
                    "required": true,
                    "scope": null,
                    "type": "text-input",
                    "url": null
                }
            ]
        },
        "icon": "langgenius/packages/aws_bedrock_knowledge_base/_assets/icon.svg",
        "index_id": "langgenius___aws_bedrock_knowledge_base",
        "install_count": 60,
        "introduction": "## aws_bedrock_knowledge_base\n\n**Author:** yungler\n**Version:** 0.0.1\n**Type:** tool\n\n### Description\n\nIf you are trying to build AI Agent with context retrieving capability and you are not primarily using Dify's Knowledge Base, you can use Dify's External Knowledge Base to connect with the RAG solution you prefer. This plugin will help you deploy your AWS Bedrock Knowledge Base client as an endpoint so Dify External Knowledge Base can seamlessly connect with it. \n\nBefore we start, make sure you have set up your AWS Bedrock Knowledge Base. You can learn how to use AWS Bedrock Knowledge Base by https://aws.amazon.com/bedrock/knowledge-bases/.\n\nHere's what we need from AWS:\n\nAWS Access Key and AWS Access Key ID. You can get these in the right upper corner,security credential, of your AWS console See https://docs.aws.amazon.com/keyspaces/latest/devguide/create.keypair.html to learn how to get these.\n<img src=\"./_assets/aws_security_credential.png\" width=\"600\" />\n\nThe Knowledge ID of your knowledge base, which you will get when your AWS Bedrock Knowledge Base is configured.\n<img src=\"./_assets/knowledge_id.png\" width=\"600\" />\n\nFollow these steps to connect your Dify Knowledge Base with AWS Bedrock Knowledge Base:\n1. Go to AWS Bedrock Knowledge Base Endpoint and setup your endpoint with AWS Access Key, AWS Access Key ID, and the Region.\n<img src=\"./_assets/setup_endpoint.png\" width=\"600\" />\n\n2. Copy the URL of the created endpoint\n<img src=\"./_assets/copy_endpoint_url.png\" width=\"600\" />\n\n3. Go to Dify Knowledge Base and click on the right upper corner External Knowledge API. Paste the URL into API Endpoint. Give the endpoint a name. \n**NOTICE: You must REMOVE the \"/retrieval\" in your URL!!!!!** For API Key, as we didn't configure any authorization, you can type in anything you want. So **PLEASE MAKE SURE NO ONE KNOWS THE ENDPOINT URL!!!**\n<img src=\"./_assets/paste_endpoint_url.png\" width=\"600\" />\n\n4. Once it's set up, click on connect to an external knowledge base. Choose the external knowledge API you just created, and put the Knowledge ID here. You can configure the top k and threshold here before connection.\n\n5. Now try a retrieval testing. You can see a chunk is retrieved from your Bedrock Knowledge Base\n<img src=\"./_assets/retrieval_test.png\" width=\"600\" />\n\n\n",
        "label": {
            "en_US": "Aws Bedrock Knowledge Base",
            "ja_JP": "Aws Bedrock Knowledge Base",
            "pt_BR": "Aws Bedrock Knowledge Base",
            "zh_Hans": "Aws Bedrock Knowledge Base"
        },
        "latest_package_identifier": "langgenius/aws_bedrock_knowledge_base:0.0.3@4933af446e967d0cdb36507a7bd3e63706d692fb06f3554f6dd702471146737b",
        "latest_version": "0.0.3",
        "model": {},
        "name": "aws_bedrock_knowledge_base",
        "org": "langgenius",
        "plugin_id": "langgenius/aws_bedrock_knowledge_base",
        "plugins": {
            "agent_strategies": null,
            "endpoints": [
                "provider/aws_bedrock_knowledge_base.yaml"
            ],
            "models": null,
            "tools": null
        },
        "privacy_options": "",
        "privacy_policy": "PRIVACY.md",
        "repository": "",
        "resource": {
            "memory": 268435456,
            "permission": {
                "endpoint": {
                    "enabled": true
                }
            }
        },
        "status": "active",
        "tags": [],
        "tool": {},
        "type": "plugin",
        "updated_at": "2025-03-20T09:25:17Z",
        "version_updated_at": "2025-03-20T09:25:17Z"
    },
    {
        "agent_strategy": {},
        "badges": [],
        "brief": {
            "en_US": "LlamaCloud client as API Endpoint to connect Dify External Knowledge Base",
            "ja_JP": "LlamaCloud client as API Endpoint to connect Dify External Knowledge Base",
            "pt_BR": "LlamaCloud client as API Endpoint to connect Dify External Knowledge Base",
            "zh_Hans": "LlamaCloud client as API Endpoint to connect Dify External Knowledge Base"
        },
        "category": "extension",
        "created_at": "2025-03-19T03:47:51Z",
        "endpoint": {
            "endpoints": [
                {
                    "hidden": false,
                    "method": "POST",
                    "path": "/retrieval"
                }
            ],
            "settings": [
                {
                    "default": null,
                    "help": null,
                    "label": {
                        "en_US": "API key",
                        "pt_BR": "API key",
                        "zh_Hans": "API key"
                    },
                    "name": "llama_cloud_api_key",
                    "options": null,
                    "placeholder": {
                        "en_US": "Please input your API key",
                        "pt_BR": "Please input your API key",
                        "zh_Hans": "请输入你的 API key"
                    },
                    "required": true,
                    "scope": null,
                    "type": "secret-input",
                    "url": null
                }
            ]
        },
        "icon": "langgenius/packages/llamacloud/_assets/icon.svg",
        "index_id": "langgenius___llamacloud",
        "install_count": 50,
        "introduction": "## llamacloud\n\n**Author:** langgenius\n**Version:** 0.0.1\n**Type:** extension\n\n### Description\n\nLlamaCloud is an online version of LlamaIndex with UI. \n\nIf you are trying to build AI Agent with context retrieving capability and you are not primarily using Dify's Knowledge Base, you can use Dify's External Knowledge Base to connect with the RAG solution you prefer. This plugin will help you deploy your LlamaCloud Index as an endpoint so Dify External Knowledge Base can seamlessly connect with it.\n\nTo set up an Index in LlamaCloud, in the **Tools: Index** section, click on Create Index. \n\n<img src=\"./_assets/llamacloud_index_create.png\" width=\"600\" />\n\nIn the Index panel, you can upload your data, connect vector storage and embedding model, configure parse settings.\n<img src=\"./_assets/llamacloud_index_panel.png\" width=\"600\" />\n\nOnce you set up your Index, you will get a Pipeline ID. \n<img src=\"./_assets/llama_cloud_pipeline_id.png\" width=\"600\" />\n\nGenerate an API Key here:\n<img src=\"./_assets/llama_cloud_api_key.png\" width=\"600\" />\n\nNow in Dify's marketplace, find LlamaCloud and install it.\nCreate a new endpoint by clicking here:\n<img src=\"./_assets/llamacloud_add_endpoint.png\" width=\"600\" />\n\nGive your endpoint a name, and paste the API Key we just created.\n<img src=\"./_assets/name_endpoint.png\" width=\"600\" />\n\nCopy the newly created Endpoint URL, go to Knowledge Base, \"External Knowledge API\", \"Add an External Knowledge API\", and paste the URL in \"API Endpoint\". \n\n**NOTICE: You must REMOVE the \"/retrieval\" in your URL!!!!!** For API Key, as we didn't configure any authorization, you can type in anything you want. So **PLEASE MAKE SURE NO ONE KNOWS THE ENDPOINT URL!!!**\n<img src=\"./_assets/paste_url.png\" width=\"600\" />\n\nOnce your external knowledge base is connected, go to \"connect to an external knowledge base\", type in the Pipeline ID in \"Knowledge ID\", give it a name, and we are good to go.\n<img src=\"./_assets/type_pipeline_id.png\" width=\"600\" />\n\nNow you can do a retrieval test of your External Knowledge Base.\n<img src=\"./_assets/retrieval_testing.png\" width=\"600\" />\n",
        "label": {
            "en_US": "Llamacloud",
            "ja_JP": "Llamacloud",
            "pt_BR": "Llamacloud",
            "zh_Hans": "Llamacloud"
        },
        "latest_package_identifier": "langgenius/llamacloud:0.0.1@974e81d3a82258b3d056f4f5430720d3dfc18ab4625a1096385ed83931049a2d",
        "latest_version": "0.0.1",
        "model": {},
        "name": "llamacloud",
        "org": "langgenius",
        "plugin_id": "langgenius/llamacloud",
        "plugins": {
            "agent_strategies": null,
            "endpoints": [
                "group/llamacloud.yaml"
            ],
            "models": null,
            "tools": null
        },
        "privacy_options": "",
        "privacy_policy": "PRIVACY.md",
        "repository": "",
        "resource": {
            "memory": 268435456,
            "permission": {
                "endpoint": {
                    "enabled": true
                }
            }
        },
        "status": "active",
        "tags": [],
        "tool": {},
        "type": "plugin",
        "updated_at": "2025-03-19T03:48:13Z",
        "version_updated_at": "2025-03-19T03:48:13Z"
    }
]